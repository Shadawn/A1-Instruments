Функция НастройкиМеханизма() Экспорт
	Настройки = А1Э_Механизмы.НовыйНастройкиМеханизма();
	
	Настройки.Обработчики.Вставить("ФормаПриСозданииНаСервере", Истина);
	Настройки.Обработчики.Вставить("ФормаПриОткрытии", Истина);
	
	Возврат Настройки;
КонецФункции

#Если НЕ Клиент Тогда
	
	Функция ФормаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
		МассивОписаний = Новый Массив;
		А1Э_Формы.ДобавитьОписаниеРеквизитаИЭлемента(МассивОписаний, "Пароль", "Строка", , , , ,
		А1Э_Структуры.Создать(
		"РежимПароля", Истина,
		));
		А1Э_Формы.ДобавитьОписаниеРеквизитаИЭлемента(МассивОписаний, "ПоказатьСкрипт", "Булево");
		А1БК_СохраняемаяВНастройкахТаблица.ДобавитьОписание(МассивОписаний, "Расширения", 
		"Флаг:Булево,Имя:Строка,ХранилищеКода:Строка,ТекущаяВерсия:Строка,ВерсияВХранилище:Строка,Гит:Булево,ВетвьГит:Строка,КомментарийГит:Строка",
		"Имя,ХранилищеКода,Гит,ВетвьГит", , , , ,
		А1Э_Структуры.Создать(
		"ФормаПриЗагрузкеДанныхИзНастроекНаСервере", ИмяМодуля() + ".ПриЗагрузкеДанныхИзНастроекНаСервере",
		));
		А1Э_Формы.ДобавитьОписаниеКомандыИКнопки(МассивОписаний, "ОбновитьИнформацию", ИмяМодуля() + ".ОбновитьИнформациюСервер:НаСервере," + ИмяМодуля() + ".ОбновитьИнформациюКлиент", Ложь, "Обновить", "РасширенияКоманднаяПанель");
		А1Э_Формы.ДобавитьОписаниеКомандыИКнопки(МассивОписаний, "ОтметитьОбновления", ИмяМодуля() + ".ОтметитьОбновления", Ложь, "Отметить обновления", "РасширенияКоманднаяПанель");
		А1Э_Формы.ДобавитьОписаниеКомандыИКнопки(МассивОписаний, "ВыгрузитьОтмеченные", ИмяМодуля() + ".ВыгрузитьОтмеченные", Ложь, "Выгрузить отмеченные", "РасширенияКоманднаяПанель");
		А1Э_УниверсальнаяФорма.ДобавитьРеквизитыИЭлементы(Форма, МассивОписаний);
		А1БК_ПолеВыбораФайла.ДобавитьОбработчикЭлементаФормы(Форма, Форма.Элементы.РасширенияХранилищеКода, А1Э_Структуры.Создать(
		"Режим", "ВыборКаталога",
		"Заголовок", "Укажите каталог, в котором хранятся файлы расширения.",
		));
		Форма.Элементы.РасширенияГит.Видимость = Ложь;
		Форма.Элементы.РасширенияВетвьГит.Видимость = Ложь;
		Форма.Элементы.РасширенияКомментарийГит.Видимость = Ложь;
	КонецФункции 
	
	Функция ПриЗагрузкеДанныхИзНастроекНаСервере(ИмяКомпонента, Форма, Настройки) Экспорт  
		ОбновитьИнформациюСервер(Форма);
	КонецФункции
	
	Функция ОбновитьИнформациюСервер(Форма, ИмяКоманды = Неопределено) Экспорт 
		Таблица = Форма.Расширения; 
		Если Таблица.Количество() = 0 Тогда Возврат Неопределено; КонецЕсли;
		
		Для Каждого Строка Из Таблица Цикл
			Расширение = А1Э_Расширения.Получить(Строка.Имя);
			Если Расширение = Неопределено Тогда
				Сообщить("Расширение " + Строка.Имя + " не найдено!");
				Продолжить;
			КонецЕсли;
			Строка.ТекущаяВерсия = Расширение.Версия;
		КонецЦикла;
	КонецФункции 
	
#КонецЕсли

Функция ФормаПриОткрытии(Форма, Отказ) Экспорт
	ОбновитьИнформациюКлиент(Форма);
	ОтметитьОбновления(Форма);	
КонецФункции

Функция ОбновитьИнформациюКлиент(Форма, Команда = Неопределено) Экспорт 
	Для Каждого Строка Из Форма.Расширения Цикл
		Если НЕ ЗначениеЗаполнено(Строка.ХранилищеКода) Тогда Продолжить; КонецЕсли;
		
		ПутьКОписанию = А1Э_Файлы.СложитьПути(Строка.ХранилищеКода, "Configuration.xml");
		Если НЕ А1Э_Файлы.ФайлСуществует(ПутьКОписанию) Тогда Продолжить; КонецЕсли;
		ОписаниеДОМ = А1Э_Сериализация.ДОМ_ИзФайлаХМЛ(ПутьКОписанию);
		Строка.ВерсияВХранилище = ОписаниеДОМ.ПолучитьЭлементыПоИмени("Version")[0].ТекстовоеСодержимое; 
	КонецЦикла;
КонецФункции

Функция ОтметитьОбновления(Форма, Команда = Неопределено) Экспорт 
	Для Каждого Строка Из Форма.Расширения Цикл
		Строка.Флаг = Строка.ТекущаяВерсия > Строка.ВерсияВХранилище И ЗначениеЗаполнено(Строка.ХранилищеКода);
	КонецЦикла;
КонецФункции

Функция ВыгрузитьОтмеченные(Форма, Команда = Неопределено) Экспорт 
	КонтекстВыполнения = А1Э_Структуры.Создать(
	"Контекст", А1Э_Структуры.Создать(
	"ПоказатьСкрипт", Форма.ПоказатьСкрипт,
	),
	);
	Если НЕ Форма.ПоказатьСкрипт И А1Э_Конфигуратор.Открыт() Тогда
		Сообщить("Для выгрузки расширений необходимо закрыть конфигуратор!");
		Возврат Неопределено;
	КонецЕсли;
	Для Каждого Строка Из Форма.Расширения Цикл
		Если НЕ Строка.Флаг Тогда Продолжить; КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Строка.ХранилищеКода) Тогда
			Сообщить("Выгрузка расширения " + Строка.Имя + " невозможна: не указано хранилище кода (каталог выгрузки)");
		КонецЕсли;
		Ошибка = Ложь;
		Попытка
			А1Э_Конфигуратор.СохранитьКонфигурациюВФайл(Форма.Пароль, А1Э_Файлы.СложитьПути(Строка.ХранилищеКода, "extension.cfe"), Строка.Имя, КонтекстВыполнения);
		Исключение
			Ошибка = Истина;
			ОписаниеОшибки = ОписаниеОшибки();
			Сообщить(ОписаниеОшибки);
		КонецПопытки;
		Попытка
			А1Э_Конфигуратор.СохранитьКонфигурациюВФайлы(Форма.Пароль, Строка.ХранилищеКода, Строка.Имя, , КонтекстВыполнения);
		Исключение
			Ошибка = Истина;
			ОписаниеОшибки = ОписаниеОшибки();
			Сообщить(ОписаниеОшибки);
		КонецПопытки;
		Попытка
			УдалитьФайлы(А1Э_Файлы.СложитьПути(Строка.ХранилищеКода, "ConfigDumpInfo.xml"));
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		
		Если Ошибка Тогда Сообщить("При сохранении возникла ошибка!") КонецЕсли;
		//Если НЕ Строка.Гит Тогда Продолжить; КонецЕсли;
		//Если НЕ ЗначениеЗаполнено(Строка.ВетвьГит) Тогда
		//	Сообщить("Не указана ветвь для выгрузки в git. Выгрузка не выполнена!");
		//КонецЕсли;
	КонецЦикла;
	
	
КонецФункции 

Функция ИмяМодуля() Экспорт
	Возврат "А1И_ПомошникКонтроляВерсий";
КонецФункции 

