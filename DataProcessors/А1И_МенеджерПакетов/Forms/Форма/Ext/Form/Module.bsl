&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтветСервера = ПолучитьHTTPОтвет("http://81.90.181.4:6584/packages");
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(ОтветСервера.ПолучитьТелоКакСтроку());
	СписокПакетов = ПрочитатьJSON(Чтение);
	Для Каждого Пакет Из СписокПакетов Цикл
		Строка = Пакеты.Добавить();
		Строка.Имя = Пакет.name;
		Строка.ВерсияДоступная = Пакет.version;
		Строка.Описание = Пакет.description;
		Строка.СсылкаЗагрузки = Пакет.downloadPath;
		Строка.ИзменяетДанные = Пакет.dataChange;
		СуществующееРасширение = РасширенияКонфигурации.Получить(Новый Структура("Имя", Строка.Имя));
		Если СуществующееРасширение.Количество() <> 0 Тогда
			СуществующееРасширение = СуществующееРасширение[0];
			Строка.ВерсияТекущая = СуществующееРасширение.Версия;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеОбновления(Команда)
	Для Каждого Строка Из Пакеты Цикл
		Если Строка.ВерсияТекущая = "" Тогда Продолжить; КонецЕсли;
		Если НЕ (Строка.ВерсияДоступная > Строка.ВерсияТекущая) Тогда Продолжить; КонецЕсли;
		
		Строка.Отметка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтмеченныеНаСервере()
	ЕстьИзмененияДанных = Ложь;
	Для Каждого Строка Из Пакеты Цикл
		Если НЕ Строка.Отметка Тогда Продолжить; КонецЕсли;
		Если Строка.ИзменяетДанные = Истина Тогда
			ЕстьИзмененияДанных = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьИзмененияДанных Тогда
		Попытка
			УстановитьМонопольныйРежим(Истина);
		Исключение
			Сообщить("Не удалось установить монопольный режим (необходим для части устанавливаемых расширений)!");
		КонецПопытки;
	КонецЕсли;
	Для Каждого Строка Из Пакеты Цикл
		Если НЕ Строка.Отметка Тогда Продолжить; КонецЕсли;
		
		ИмяВременногоФайлаРасширения = ПолучитьИмяВременногоФайла(".cfe");
		СкачатьФайл(Строка.СсылкаЗагрузки, ИмяВременногоФайлаРасширения);
		ДвоичныеДанныеРасширения = Новый ДвоичныеДанные(ИмяВременногоФайлаРасширения);
		Если ЗначениеЗаполнено(Строка.ВерсияТекущая) Тогда
			Расширение = РасширенияКонфигурации.Получить(Новый Структура("Имя", Строка.Имя))[0];
		Иначе
			Расширение = РасширенияКонфигурации.Создать();
		КонецЕсли;
		Расширение.ЗащитаОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = Ложь;
		Расширение.БезопасныйРежим = Ложь;
		Расширение.ИспользоватьОсновныеРолиДляВсехПользователей = Ложь;
		Расширение.Записать(ДвоичныеДанныеРасширения);
		Строка.ВерсияТекущая = Расширение.Версия;
		Сообщить("Было установлено расширение " + Строка.Имя + " версии " + Строка.ВерсияТекущая); 
	КонецЦикла;
	Сообщить("Для применения изменений перезайдите в систему!");
	Если МонопольныйРежим() Тогда
		УстановитьМонопольныйРежим(Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтмеченные(Команда)
	УстановитьОтмеченныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СкачатьТекущий(Команда)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Выбрать();
	СкачатьФайл(Элементы.Пакеты.ТекущиеДанные.СсылкаЗагрузки, Диалог.ПолноеИмяФайла);
КонецПроцедуры

#Область ПолучитьФайлССервера 

&НаСервереБезКонтекста
Функция ПолучитьHTTPОтвет(Ссылка, ИмяФайла = Неопределено)
	URLРазделенный = РазделитьURL(Ссылка);
	
	ИмяСервера = URLРазделенный.ИмяСервера;
	ПутьКФайлуНаСервере = URLРазделенный.ПутьКФайлуНаСервере;
	Протокол = URLРазделенный.Протокол;
	
	Если Протокол = "https" Тогда
		Соединение = Новый HTTPСоединение(ИмяСервера, , , , , , Новый ЗащищенноеСоединениеOpenSSL);
	Иначе
		Соединение = Новый HTTPСоединение(ИмяСервера, , , , , ,);
	КонецЕсли;
	
	HTTPЗапрос = Новый HTTPЗапрос(ПутьКФайлуНаСервере, Новый Соответствие);
	HTTPЗапрос.Заголовки.Вставить("Accept-Charset", "utf-8");
	HTTPОтвет = Соединение.Получить(HTTPЗапрос, ИмяФайла);
	
	Если HTTPОтвет.КодСостояния = 301 или HTTPОтвет.КодСостояния = 302 Тогда
		НоваяСсылка = HTTPОтвет.Заголовки["location"];
		HTTPОтвет = ПолучитьHTTPОтвет(НоваяСсылка, ИмяФайла);
	КонецЕсли;
	
	Возврат HTTPОтвет;
	
КонецФункции

&НаСервереБезКонтекста
Функция СкачатьФайл(Ссылка, Знач ИмяФайла = Неопределено)
	Если ИмяФайла = Неопределено Тогда
		ИмяФайла = ПолучитьИмяВременногоФайла();
	КонецЕсли;
	
	HTTPОтвет = ПолучитьHTTPОтвет(Ссылка, ИмяФайла);
	
	Если HTTPОтвет.КодСостояния < 200 Или HTTPОтвет.КодСостояния >= 300 Тогда
		ВызватьИсключение "Файл не был получен - код ответа " + HTTPОтвет.КодСостояния;
	КонецЕсли;
	
	Возврат ИмяФайла;
	
КонецФункции // ПолучитьФайлССервера()

&НаСервереБезКонтекста
Функция РазделитьURL(Знач URL) Экспорт
	
	СтруктураURL = СтруктураURI(URL);
	
	Результат = Новый Структура;
	Результат.Вставить("Протокол", ?(ПустаяСтрока(СтруктураURL.Схема), "http", СтруктураURL.Схема));
	Результат.Вставить("ИмяСервера", СтруктураURL.ИмяСервера);
	Результат.Вставить("ПутьКФайлуНаСервере", СтруктураURL.ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;
	
	// Строка соединения и путь на сервере.
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
	
	// Информация пользователя и имя сервера.
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(ПустаяСтрока(Порт), Неопределено, Число(Порт)));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

