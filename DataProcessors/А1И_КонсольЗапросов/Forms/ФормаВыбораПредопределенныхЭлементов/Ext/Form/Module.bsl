
////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СисИнфо = Новый СистемнаяИнформация;
	ЭтаФорма.Объект.ВерсияПриложения = СисИнфо.ВерсияПриложения;
	
	Если Лев(Объект.ВерсияПриложения, 3) = "8.2" Тогда
		Объект.МодальностьРазрешена = Истина;
	Иначе
		РежимИспользованияМодальности = Метаданные["РежимИспользованияМодальности"];
		РежимИспользованияМодальности_Использовать = Метаданные["СвойстваОбъектов"].РежимИспользованияМодальности.Использовать;
		Объект.МодальностьРазрешена = РежимИспользованияМодальности = РежимИспользованияМодальности_Использовать;
	КонецЕсли;
    
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТипОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    СписокВыбора = Новый СписокЗначений;
    СписокВыбора.Добавить("Справочник");
    СписокВыбора.Добавить("Документ");
    СписокВыбора.Добавить("Перечисление");
    СписокВыбора.Добавить("ПланВидовХарактеристик");
    СписокВыбора.Добавить("ПланСчетов");
    СписокВыбора.Добавить("ПланВидовРасчета");
    СписокВыбора.Добавить("БизнесПроцесс");
    СписокВыбора.Добавить("Задача");
	
	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ВыбратьИзСписка(СписокВыбора, Элемент, СписокВыбора.НайтиПоЗначению(ЭтаФорма.ТипОбъекта));
		|ТипОбъектаНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ТипОбъектаНачалоВыбораЗавершение"", ЭтаФорма);
		|ПоказатьВыборИзСписка(Оповещение, СписокВыбора, Элемент, СписокВыбора.НайтиПоЗначению(ЭтаФорма.ТипОбъекта));"; 
	КонецЕсли;
	
	Выполнить(КодВыполнения);

КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаНачалоВыбораЗавершение(Значение, Параметры) Экспорт

    Если Значение <> Неопределено И Значение.Значение <> ЭтаФорма.ТипОбъекта Тогда
    	ЭтаФорма.ТипОбъекта = Значение;
        ЭтаФорма.ИмяОбъекта = "";
		ЭтаФорма.ПредопределенныйЭлемент = "";
		СформироватьРезультат();
    КонецЕсли; 

КонецПроцедуры // ТипОбъектаНачалоВыбораЗавершение()

&НаКлиенте
Процедура ИмяОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

    Если ТипОбъекта = "" Тогда
    	Возврат;
    КонецЕсли;
    
    Если ТипОбъекта = "ВнешняяОбработка" Тогда
        Путь = ПолучитьПутьКОбработке();
        Если Путь <> Неопределено И Путь <> ЭтаФорма.ИмяОбъекта Тогда
            ЭтаФорма.ИмяОбъекта = Путь;
            ЭтаФорма.ТаблицаОбъекта = "";
            ЭтаФорма.СопоставлениеКолонок.Очистить();
        КонецЕсли; 
        Возврат;
    КонецЕсли; 
    
	ПутьКФорме = ПолучитьИмяОбработки() + ".Форма.ФормаВыбораИзСписка";
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТипОбъекта"  , ЭтаФорма.ТипОбъекта);
	ПараметрыОткрытия.Вставить("ИмяОбъекта"  , ЭтаФорма.ИмяОбъекта);
	ПараметрыОткрытия.Вставить("СтрокаПоиска", ЭтаФорма.ИмяОбъекта);
	
	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ОткрытьФормуМодально(ПутьКФорме, ПараметрыОткрытия);
		|ИмяОбъектаНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ИмяОбъектаНачалоВыбораЗавершение"", ЭтаФорма);
		|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытия, , , , , Оповещение);"; 
	КонецЕсли;
	
	Выполнить(КодВыполнения);
    
КонецПроцедуры

&НаКлиенте
Функция ИмяОбъектаНачалоВыбораЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено И Результат <> ЭтаФорма.ИмяОбъекта Тогда
	    ЭтаФорма.ИмяОбъекта = Результат;
		ЭтаФорма.ПредопределенныйЭлемент = "";
		СформироватьРезультат();
	КонецЕсли; 

КонецФункции // ВыбратьИмяОбъектаНаСервере()

&НаКлиенте
Процедура ПредопределенныйЭлементНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ИмяОбъекта = "" Тогда
	    Возврат;
	КонецЕсли;
    
	ПутьКФорме = ПолучитьИмяОбработки() + ".Форма.ФормаВыбораИзСписка";
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТипОбъекта"  , ЭтаФорма.ТипОбъекта);
	ПараметрыОткрытия.Вставить("ИмяОбъекта"  , ЭтаФорма.ИмяОбъекта);
	ПараметрыОткрытия.Вставить("СтрокаПоиска", ЭтаФорма.ПредопределенныйЭлемент);
	ПараметрыОткрытия.Вставить("ПредопределенныеЗначения");
	
	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ОткрытьФормуМодально(ПутьКФорме, ПараметрыОткрытия);
		|ПредопределенныйЭлементНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ПредопределенныйЭлементНачалоВыбораЗавершение"", ЭтаФорма);
		|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытия, , , , , Оповещение);"; 
	КонецЕсли;
	
	Выполнить(КодВыполнения);

КонецПроцедуры

&НаКлиенте
Процедура ПредопределенныйЭлементНачалоВыбораЗавершение(Значение, Параметры) Экспорт
	
	Если Значение <> Неопределено И Значение <> ЭтаФорма.ПредопределенныйЭлемент Тогда
        ЭтаФорма.ПредопределенныйЭлемент = Значение;
		СформироватьРезультат();
    КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПустаяСсылкаПриИзменении(Элемент)
	
	Элементы.ПредопределенныйЭлемент.Доступность = ПустаяСсылка = 1;
	СформироватьРезультат();
	
КонецПроцедуры

// SG, вставка 11/09/15 >>>
&НаКлиенте
Процедура ДобавлятьЗначениеПриИзменении(Элемент)
	
	СформироватьРезультат();
	
КонецПроцедуры
// SG, вставка 11/09/15 <<<


////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ОРАБОТЧИКИ

&НаКлиенте
Функция ПолучитьПутьКОбработке()
    
    Режим = РежимДиалогаВыбораФайла.Открытие;
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
    ДиалогОткрытияФайла.ПолноеИмяФайла = "";
    Текст = "ru = ""Внешняя обработка""; en = ""External Data Processor""";
    Фильтр = НСтр(Текст)+"(*.epf)|*.epf";
    ДиалогОткрытияФайла.Фильтр = Фильтр;
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
    ДиалогОткрытияФайла.Заголовок = "Выберите файл";
    Если ДиалогОткрытияФайла.Выбрать() Тогда
        Возврат ДиалогОткрытияФайла.ПолноеИмяФайла;
    Иначе
        Возврат Неопределено;
    КонецЕсли;
    
КонецФункции // ПолучитьПутьСохраненияФайла()

&НаСервере
Функция ПолучитьИмяОбработки()
	
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	
КонецФункции 

&НаКлиенте
Процедура СформироватьРезультат()

	Результат = ТипОбъекта + ?(ПустаяСтрока(ИмяОбъекта), "", "." + ИмяОбъекта) + ?(ПустаяСтрока(ИмяОбъекта), "", ?(ПустаяСсылка = 0, ".ПустаяСсылка", ?(ПустаяСтрока(ПредопределенныйЭлемент), "", "." + ПредопределенныйЭлемент)));

	// SG, вставка 11/09/15 >>>
	Если ДобавлятьЗначение Тогда
		Результат = "ЗНАЧЕНИЕ(" + Результат + ")";
	КонецЕсли;
	// SG, вставка 11/09/15 <<<
	
КонецПроцедуры // СформироватьРезультат()

&НаСервере
Функция СоздатьСписокПредопределенныхЭлементов(ТипОбъекта, ИмяОбъекта)

    Список = Новый СписокЗначений;
    
	Если ТипОбъекта = "Справочник" Тогда
    	ИмяКоллекции = "Справочники";
    ИначеЕсли ТипОбъекта = "Перечисление" Тогда
    	ИмяКоллекции = "Перечисления";
    ИначеЕсли ТипОбъекта = "ПланВидовХарактеристик" Тогда
    	ИмяКоллекции = "ПланыВидовХарактеристик";
    ИначеЕсли ТипОбъекта = "ПланСчетов" Тогда
    	ИмяКоллекции = "ПланыСчетов";
    ИначеЕсли ТипОбъекта = "ПланВидовРасчета" Тогда
    	ИмяКоллекции = "ПланыВидовРасчета";
	Иначе
		Возврат Список;
    КонецЕсли; 

	ТекстЗапроса = "
	|ВЫБРАТЬ
	| ИмяОбъекта.Ссылка
	|ИЗ
	| " + ТипОбъекта + "." + ИмяОбъекта + " КАК ИмяОбъекта
	|" + ?(НЕ ТипОбъекта = "Перечисление", "
	|ГДЕ
	| ИмяОбъекта.Предопределенный", "");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	ИмяПредопределенного = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипОбъекта = "Перечисление" Тогда
			ИндексЗначенияПеречисления = Перечисления[ИмяОбъекта].Индекс(Выборка.Ссылка);
			ИмяЗначенияПеречисления = Метаданные.Перечисления[ИмяОбъекта].ЗначенияПеречисления[ИндексЗначенияПеречисления].Имя;
			Список.Добавить(ИмяЗначенияПеречисления);
		Иначе
			Выполнить("ИмяПредопределенного = " + ИмяКоллекции + "[""" + ИмяОбъекта + """].ПолучитьИмяПредопределенного(Выборка.Ссылка)");
			Список.Добавить(ИмяПредопределенного);
		КонецЕсли;

	КонецЦикла;
	
	Список.СортироватьПоЗначению();
	
    Возврат Список;

КонецФункции // СоздатьСписокПредопределенныхЭлементов()



